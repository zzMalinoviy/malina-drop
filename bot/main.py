from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types.message import ContentType
from aiogram.utils import executor
import os

API_TOKEN = os.getenv("BOT_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")
PAYMENT_TOKEN = os.getenv("PAYMENT_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton(text="üéÆ –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å—ã", web_app=WebAppInfo(url=WEBAPP_URL))
    )
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å Mini App:", reply_markup=keyboard)

@dp.message_handler(commands=['balance'])
async def balance(message: types.Message):
    await message.answer("–í–∞—à –±–∞–ª–∞–Ω—Å: 1000 –º–æ–Ω–µ—Ç üí∞")

@dp.message_handler(commands=['pay'])
async def pay(message: types.Message):
    prices = [types.LabeledPrice(label="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞", amount=50000)]
    await bot.send_invoice(
        message.chat.id,
        title="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ",
        description="–í—ã –ø–æ–ª—É—á–∏—Ç–µ 500 –º–æ–Ω–µ—Ç",
        provider_token=PAYMENT_TOKEN,
        currency="RUB",
        prices=prices,
        start_parameter="topup",
        payload="balance_topup"
    )

@dp.pre_checkout_query_handler(lambda query: True)
async def checkout(query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(query.id, ok=True)

@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def got_payment(message: types.Message):
    await message.answer("‚úÖ –ü–ª–∞—Ç—ë–∂ –ø–æ–ª—É—á–µ–Ω! –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
